# AS_V7AをYESにするとARMv7設定になる

set(ARCHITECTURE armeabi)
set(ANDROID_PREF "arm-linux-androideabi")
set(ANDROID_TOOLCHAIN "arm-linux-androideabi")
set(ANDROID_ARCH_SHORT "arm")
set(ANDROID_ARCH_LONG "armeabi")
if(AS_V7A)
	set(ANDROID_ARCH_LONG "${ANDROID_ARCH_LONG}-v7a")
	if(USE_CLANG)
		set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -target armv7a-none-linux-androideabi")
	else()
		set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -march=armv7 -mhard-float -D_NDK_MATH_NO_SOFTFP=1 -Wl,-lm_hard")
	endif()
else()
	if(USE_CLANG)
		set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -target armv5te-none-linux-androideabi -msoft-float -D_NDK_MATH_NO_SOFTFP=0")
	else()
		set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -march=armv5te")
	endif()
endif()
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fpic -ffunction-sections -funwind-tables -fstack-protector -no-canonical-prefixes")
add_definitions(-D__arm__)
# ARMではExceptionPtrをサポートしてないらしいので無効化するマクロを定義
add_definitions(-DNO_EXCEPTION_PTR)
# ARM or THUMB
if(AS_ARM)
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -marm")
	set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -fstrict-aliasing -funswitch-loops")
	if(NOT USE_CLANG)
		set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -finline-limit=300")
	endif()
else()
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mthumb")
	set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -fno-strict-aliasing")
	if(NOT USE_CLANG)
		set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -finline-limit=64")
	endif()
endif()
file(GLOB ANDROID_CMAKE "${CMAKE_CURRENT_LIST_DIR}/Android.cmake")
include(${ANDROID_CMAKE})
